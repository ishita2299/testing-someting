
name: 'Terraform CI'
# run-name: ${{ github.actor }} is Creating a Project of Api Deployment on GCP

on:
  push:
    branches:
    - main
  pull_request:
  

concurrency: 
  group: ${{ github.action == 'terraform-automation' }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash
#     working-directory: ./examples


jobs: 
  terraform:
    name: 'Terraform'
    runs-on: Ubuntu-latest
    if: github.event_name == 'push' || github.event_name != 'pull_request'


    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Setup GCP Service Account google-github-actions/setup-gcloud@main
        uses: google-github-actions/setup-gcloud@main
        with:
          version: 'latest'
          service_account_email: ${{secrets.GCP_SA_EMAIL}}
          service_account_key: ${{secrets.GCP_SA_KEY}}
          export_default_credentials: true  

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        env:
          GCP_SA_EMAIL: ${{secrets.GCP_SA_EMAIL}}
          GCP_SA_KEY: ${{secrets.GCP_SA_KEY}}
        

      - name: Terraform Format
        run: terraform fmt -diff
        env:
          GCP_SA_EMAIL: ${{secrets.GCP_SA_EMAIL}}
          GCP_SA_KEY: ${{secrets.GCP_SA_KEY}}

      - name: Terraform Plan
        run: terraform plan -input=false
        env:
          GCP_SA_EMAIL: ${{secrets.GCP_SA_EMAIL}}
          GCP_SA_KEY: ${{secrets.GCP_SA_KEY}}

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
        run: terraform apply --auto-approve 
      

     
      
    

    


    


